import tensorflow as tf
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense
import numpy as np

# Step 1: Define the Neural Network
model = Sequential([
    Dense(16, activation='relu', input_shape=(4,)),  # Hidden layer with 16 neurons
    Dense(8, activation='relu'),                    # Hidden layer with 8 neurons
    Dense(3, activation='softmax')                  # Output layer with 3 neurons for classification
])

# Step 2: Compile the Model
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

# Step 3: Generate Dummy Training Data
X_train = np.random.random((100, 4))  # 100 samples with 4 features each
y_train = tf.keras.utils.to_categorical(np.random.randint(3, size=(100,)), num_classes=3)  # 3 classes

# Step 4: Train the Model
model.fit(X_train, y_train, epochs=10, batch_size=8)

# Step 5: Generate Dummy Test Data
X_test = np.random.random((20, 4))  # 20 samples with 4 features each
y_test = tf.keras.utils.to_categorical(np.random.randint(3, size=(20,)), num_classes=3)

# Step 6: Evaluate the Model
loss, accuracy = model.evaluate(X_test, y_test)
print("Test Loss:", loss)
print("Test Accuracy:", accuracy)

# Step 7: View Model Summary
model.summary()
